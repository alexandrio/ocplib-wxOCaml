(*******************************************************************)
(*                                                                 *)
(*                            wxOCaml                              *)
(*                                                                 *)
(*                       Fabrice LE FESSANT                        *)
(*                                                                 *)
(*                 Copyright 2013, INRIA/OCamlPro.                 *)
(*            Licence LGPL v3.0 with linking exception.            *)
(*                                                                 *)
(*******************************************************************)

if system = "win32" || system = "win64" then {
  exe_ext = ".exe"
} else {
  exe_ext = ""
}

(* This "rules" package is just there to be able to reference this
   directory symbolically from other directories. *)
begin rules "wxConfig_dir" end

begin program "genWxConfig"
  files = [ "genWxConfig.ml" ]
end

begin library "wxConfig"
    files = [ "wxUSE.ml" "wxHAS.ml" "wxDefs.ml" ]
    requires = [ "wxWidgets_cpp_dir" "api_dir" "genWxConfig" ]

    genWxUSE_exe = %string( strings = [
      "%{wxConfig_FULL_DST_DIR}%/genWxUSE" exe_ext
    ])

    genWxHAS_exe = %string( strings = [
      "%{wxConfig_FULL_DST_DIR}%/genWxHAS" exe_ext
    ])

    genWxDefs_exe = %string( strings = [
      "%{wxConfig_FULL_DST_DIR}%/genWxDefs" exe_ext
    ])

    build_rules = [

      genWxUSE_exe (
        sources = [
          "genWxUSE.cpp"
            "wxOCaml.h"
            "wxOCamlConfig.h"
        ]
        commands = [
          { cxx cxxflags cppflags "-o" "%{wxConfig_FULL_DST_DIR}%/genWxUSE"  "genWxUSE.cpp" cxxlibs }
        ]
      )

      "wxUSE.ml" (
        commands = [
            { genWxUSE_exe } (stdout = "wxUSE.ml")
        ]
        sources = [ genWxUSE_exe ]
      )

        [ "genWxUSE.cpp" "genWxHAS.cpp" ] (
          uniq_rule = "genWxHAS.cpp"
            sources = [
              "%{api_dir_FULL_SRC_DIR}%/wxUSE.dsc"
                "%{api_dir_FULL_SRC_DIR}%/wxHAS.dsc"
		%string( strings = [
                   "%{genWxConfig_FULL_DST_DIR}%/genWxConfig.asm" exe_ext ])
            ]
            commands = [
               { "%{genWxConfig_FULL_DST_DIR}%/genWxConfig.asm" }
            ]
        )


      genWxHAS_exe (
        sources = [
          "genWxHAS.cpp"
            "wxOCaml.h"
            "wxOCamlConfig.h"
        ]
        commands = [
          { cxx cxxflags cppflags "-o" "%{wxConfig_FULL_DST_DIR}%/genWxHAS"  "genWxHAS.cpp" cxxlibs }
        ]
      )

      "wxHAS.ml" (
        commands = [
            { "%{wxConfig_FULL_DST_DIR}%/genWxHAS" } (stdout = "wxHAS.ml")
        ]
        sources = [ genWxHAS_exe ]
      )


      "wxDefs.ml" (
        commands = [
            { "%{wxConfig_FULL_DST_DIR}%/genWxDefs" } (stdout = "wxDefs.ml")
        ]
        sources = [ genWxDefs_exe ]
      )

      genWxDefs_exe (
        sources = [
          "genWxDefs.cpp"
            "wxOCaml.h"
            "%{api_dir_FULL_SRC_DIR}%/wxDefs.dsc"
        ]
        commands = [
          { cxx cxxflags cppflags "-o" "%{wxConfig_FULL_DST_DIR}%/genWxDefs"  "genWxDefs.cpp" cxxlibs }
        ]
      )


    ]
end
